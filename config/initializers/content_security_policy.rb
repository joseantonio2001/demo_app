# Be sure to restart your server when you modify this file.
# This file was generated by the 'secure_framework' gem.

# Define an application-wide content security policy.
# For further information see the following documentation
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy

Rails.application.configure do
  config.content_security_policy do |policy|
    policy.default_src :self, :https
    policy.font_src    :self, :https, :data
    policy.img_src     :self, :https, :data
    policy.object_src  :none
    policy.script_src  :self, :https,
                      'sha256-DpVt+Ev/lTHBvE9AP6MusgWkuqGvLlkqNGv2dwHVOyE=',
                      'sha256-Bk2Ki1XPeMQgcV8U6q5OUXYdrX/47R4L1F0tatGpT7w='
    policy.style_src   :self, :https

    # Add policies for Vite in development, if the host app is using it.
    if Rails.env.development?
      # Allow @vite/client to hot reload style changes in development
      policy.style_src *policy.style_src, :unsafe_inline
      
      # Allow @vite/client to hot reload javascript changes in development,
      # but only if the ViteRuby gem is defined.
      if defined?(ViteRuby)
        policy.script_src *policy.script_src, :unsafe_inline, "https://#{ViteRuby.config.host_with_port}"
      end
    end

    # Specify URI for violation reports
    # policy.report_uri "/csp-violation-report-endpoint"
  end

  # Generate session nonces for permitted importmap and inline scripts
  config.content_security_policy_nonce_generator = ->(request) { request.session.id.to_s }
  config.content_security_policy_nonce_directives = %w(script-src)

  # Report CSP violations to a specified URI. See:
  # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy-Report-Only
  # config.content_security_policy_report_only = true
end
